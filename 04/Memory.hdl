// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/05/Memory.hdl

/**
 * The complete address space of the Hack computer's memory,
 * including RAM and memory-mapped I/O. 
 * The chip facilitates read and write operations, as follows:
 *     Read:  out(t) = Memory[address(t)](t)
 *     Write: if load(t-1) then Memory[address(t-1)](t) = in(t-1)
 * In words: the chip always outputs the value stored at the memory 
 * location specified by address. If load==1, the in value is loaded 
 * into the memory location specified by address. This value becomes 
 * available through the out output from the next time step onward.
 * Address space rules:
 * Only the upper 16K+8K+1 words of the Memory chip are used. 
 * Access to address>0x6000 is invalid. Access to any address in 
 * the range 0x4000-0x5FFF results in accessing the screen memory 
 * map. Access to address 0x6000 results in accessing the keyboard 
 * memory map. The behavior in these addresses is described in the 
 * Screen and Keyboard chip specifications given in the book.
 */

CHIP Memory {
    IN in[16], load, address[15];
    OUT out[16];

    PARTS:
    // 0x6000 110000000000000, sopra questo numero devo ignorare
	// 0x5FFF 101111111111111 
	// 0x4000 100000000000000, da questo in su Ã¨ la screen memory

    // RAM16
    Not(in=address[14], out=isRam);
	And(a=isRam, b=load, out=isRamLoad);
	RAM16K(in=in, load=isRamLoad, address=address[0..13], out=ramOut);

    // SCREEN
    Not(in=address[13], out=isScreenBit);
	Not(in=isRam, out=notIsRam);
	And(a=isScreenBit, b=notIsRam, out=isScreen);
	And(a=isScreen, b=load, out=isScreenLoad);
	Screen(in=in, load=isScreenLoad, address=address[0..12], out=screenOut);

	Keyboard(out=keyboardOut);

	// REGION OUT
	Mux16(a=keyboardOut, b=screenOut, sel=isScreen, out=keybMuxScreen);
	Mux16(a=keybMuxScreen, b=ramOut, sel=isRam, out=out);


}